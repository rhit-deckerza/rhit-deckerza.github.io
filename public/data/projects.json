{
  "research": {
    "evolution-development": {
      "title": "Evolution of Developmental Strategies in NK Fitness Landscapes",
      "description": "Research exploring the relationship between evolution and development through computational simulation, published at ALIFE 2022 Conference.",
      "fullDescription": "As part of a research team at Rose-Hulman, I helped develop an abstract computational framework to investigate how evolution shapes developmental strategies. My primary contributions focused on implementing the NK fitness landscape model and analyzing the patterns of exploration and exploitation that emerged from our simulations.\n\nOur research revealed fascinating insights into why certain developmental processes, like adolescent exploration and sensitive periods, may have evolved. By simulating organisms navigating through environments of varying complexity, we demonstrated that evolution naturally selects for time-sensitive developmental strategies that balance exploration and exploitation.\n\nThe computational framework I helped develop provides a new way to study the relationship between evolution and development, offering insights that would be difficult to obtain through traditional biological studies due to the vast time scales involved.",
      "tags": [
        "Artificial Intelligence",
        "Computational Biology"
      ],
      "technicalTags": [
        "Python",
        "C++",
        "Matplotlib",
        "CUDA"
      ],
      "images": [
        {
          "url": "/images/agentActions.png",
          "caption": "Illustration of an agent performing actions according to its genotype."
        },
        {
          "url": "/images/looksbeforewalks.png",
          "caption": "Look before walks and fitness at each walk across K values"
        }
      ],
      "links": [
        {
          "title": "Research Paper",
          "url": "https://direct.mit.edu/isal/proceedings/isal/34/59/2035435/isal_a_00543.pdf"
        },
        {
          "title": "ALIFE 2022 Conference",
          "url": "https://2022.alife.org/"
        }
      ],
      "keyTakeaways": [
        "Gained experience in computational modeling and complex systems analysis, learning to translate biological concepts into abstract computational frameworks",
        "Developed strong Python optimization skills through implementing parallel processing with CUDA, resulting in faster simulation speeds",
        "Strengthened data visualization capabilities using Matplotlib to communicate complex patterns in our results",
        "Our work provided new computational evidence for why developmental processes like adolescent exploration may have evolved"
      ],
      "collaborators": [
        "Dr. Jake Ashworth",
        "Yujung Lee",
        "Jackson Shen",
        "Edward Kim",
        "Dr. Jason Yoder"
      ]
    },
    "beauty-beyond-words": {
      "title": "Beauty Beyond Words II: Leveraging Attention for Ingredient-Attribute Insights in Beauty Products",
      "description": "Research applying transformer-based architectures to analyze relationships between beauty product ingredients and skin-related attributes.",
      "fullDescription": "This research addresses the beauty industry's need for transparent and explainable methods to map product ingredients to skin-related attributes. We developed a BERT-based machine learning model that achieved a balanced F1 score of 0.61 and precision of 0.75 for predicting product attributes from ingredients and descriptions.\n\nOur approach combined explicit model architectures with advanced explainability techniques, including Integrated Gradients, SHAP, and LIME, to uncover the relationships between ingredients and product attributes. By utilizing publicly available Amazon product metadata and reviews alongside a curated skincare glossary, we developed a scalable pipeline to extract and analyze ingredient-attribute relationships in beauty products.\n\nThe model successfully identified key attributes such as acne, hydration, and sensitive skin with high precision, while explainability methods revealed significant ingredients like salicylic acid for acne treatment and petroleum jelly for hydration. This work contributes to developing more transparent and effective tools for beauty product analysis and recommendation systems.",
      "tags": [
        "Machine Learning",
        "Natural Language Processing",
        "Explainable AI"
      ],
      "technicalTags": [
        "Python",
        "PyTorch",
        "BERT",
        "Hugging Face"
      ],
      "images": [
        {
          "url": "/images/beauty_flowchart.png",
          "caption": "Flowchart representing the pipeline for extracting ingredients and attributes."
        }
      ],
      "links": [
        {
          "title": "Research Repository",
          "url": "https://github.com/shreyasriram4/transformers_beauty"
        }
      ],
      "keyTakeaways": [
        "Developed a scalable, interpretable machine learning pipeline for analyzing beauty product ingredients and their attributes",
        "Demonstrated that transformer-based models can effectively predict product attributes with high precision (0.75) and reasonable F1 scores (0.61)",
        "Applied multiple explainability techniques to uncover meaningful connections between ingredients and skin benefits",
        "Identified opportunities for improving recommendation systems through transparent ingredient-attribute mapping"
      ],
      "collaborators": [
        "Shreya Sriram",
        "Priyanshi Gupta"
      ]
    }
  },
  "coding": {
    "ai-actual": {
      "title": "AI Actual: Personal Finance App",
      "description": "An open-source fork of Actual Budget enhanced with AI capabilities for intelligent transaction management, natural conversations about spending, and automated financial organization.",
      "fullDescription": "AI Actual is my fork of the popular open-source personal finance application Actual Budget, enhanced with artificial intelligence capabilities. The project focuses on making personal finance more accessible and intelligent through natural language interactions and automated management. I've implemented a chat interface that allows users to naturally query and analyze their transaction history, along with intelligent systems for automatic transaction categorization and payee name normalization. The application maintains the privacy-first approach of the original Actual, with a focus on keeping sensitive financial data secure. Future development plans include integrated AI budget planning, predictive financial forecasting, and local model support for enhanced privacy. By improving upon an already solid open-source foundation, AI Actual demonstrates how machine learning can make financial tools more intelligent and personalized while respecting user privacy.",
      "tags": [
        "Personal Finance",
        "Artificial Intelligence",
        "Open Source",
        "Web Application"
      ],
      "technologies": [
        "React",
        "Node.js",
        "SQLite",
        "TensorFlow.js"
      ],
      "features": [
        "Chat interface for natural conversations about your finances",
        "AI-powered transaction categorization",
        "Intelligent payee name normalization",
        "Privacy-preserving design with local-first computing"
      ],
      "screenshots": [
        {
          "url": "/images/AIActualCategorization.gif",
          "caption": "AI Actual dashboard with smart insights and chat interface"
        }
      ],
      "links": [
        {
          "title": "GitHub Repository",
          "url": "https://github.com/yourusername/ai-actual",
          "icon": "GitHub"
        }
      ],
    
      "workflow": [
        {
          "step": "Data Ingestion",
          "description": "Import and clean bank transactions"
        },
        {
          "step": "AI Processing",
          "description": "Automatic categorization and payee normalization"
        },
        {
          "step": "Natural Language Interface",
          "description": "Chat-based interaction with financial data"
        },
        {
          "step": "Privacy Protection",
          "description": "Secure data with local-first approach and encryption"
        }
      ]
    },
    "polyrook": {
      "title": "PolyRook",
      "description": "PolyRook is a decentralized, AI-powered 3D model platform that uses a torrent-like network to generate and share thousands of new assets daily, all fully tagged for quick filtering and easy integration.",
      "fullDescription": "The premise is simple: anywhere, anytime, anyone can use AI to spawn brand-new 3D meshes and access an infinite library. Then they seamlessly push and share these GLB creations across a fully distributed, torrent-like network. Our desktop app helps orchestrate local generation, seeding, and partial hosting. Meanwhile, the PolyRook API caters to developers who want dynamic, on-the-fly 3D asset loading for procedural or AAA games.",
      "tags": [
        "3D Modeling",
        "Peer-to-Peer",
        "AI Generation",
        "Decentralized"
      ],
      "technologies": [
        "React",
        "Three.js",
        "WebGL",
        "Peer-to-Peer",
        "WebRTC"
      ],
      "features": [
        "AI-driven 3D model generation, spawning thousands of new assets daily",
        "Fully distributed, torrent-like architecture for scalable hosting",
        "Comprehensive tagging and metadata system for quick discovery",
        "Desktop application for local generation, seeding, and hosting",
        "Robust developer API for on-demand 3D asset loading"
      ],
      "screenshots": [
        {
          "url": "/images/polyrookhome.png",
          "caption": "PolyRook main interface with 3D model browsing and filtering"
        },
        {
          "url": "/images/polyrookStudio.png",
          "caption": "Studio for editing and composing 3D models"
        }
      ],
      "links": [
        {
          "title": "Demo",
          "url": "https://polyrook.com",
          "icon": "Launch"
        }
      ],
      "collaborators": [
        "Alex Rivera",
        "Taylor Kim",
        "Raj Patel"
      ],
      "workflow": [
        {
          "step": "Local Node Saves",
          "description": "Tagged & stored locally."
        },
        {
          "step": "Push to Network",
          "description": "Hashed & shared to peers with matching tags."
        },
        {
          "step": "Seeding/Downloading",
          "description": "Grab from nearest node for specific model types."
        },
        {
          "step": "Metadata & Ratings",
          "description": "Votes & feedback sync back to help others."
        }
      ]
    }
  }
}
